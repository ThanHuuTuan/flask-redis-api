version: 2
jobs:
  build:
    working_directory: /app
    environment:
      PROJECT_NAME: alien-trainer-269910
      CLUSTER_NAME: my-cool-gke-cluster
      CLOUDSDK_COMPUTE_ZONE: europe-west1-b
      DEBIAN_FRONTEND: noninteractive
      GOOGLE_APPLICATION_CREDENTIALS: ${HOME}/account.json
      IMAGE_NAME: flask
    docker:
      - image: google/cloud-sdk:241.0.0-slim
    steps:
      - checkout
      - setup_remote_docker
      # - restore_cache:
      #     keys:
      #       - v1-{{ .Branch }}-{{ .Revision }}
      #       - v1-{{ .Branch }}-
      #       - v1-
      - run:
          name: Install dependencies
          command: |
            apt-get update
            apt-get install -y gettext
            apt-get install -y kubectl
      - run:
          name: Install Docker client
          command: |
            set -x
            VER="17.05.0-ce"
            curl -L -o /tmp/docker-$VER.tgz https://get.docker.com/builds/Linux/x86_64/docker-$VER.tgz
            tar -xz -C /tmp -f /tmp/docker-$VER.tgz
            mv /tmp/docker/* /usr/bin
      - run:
          name: Check docker version
          command: |
            docker version
      # - run:
      #     name: Load Docker image layer cache
      #     command: |
      #       set +o pipefail
      #       docker load -i /caches/app.tar | true
      - run:
          name: Build application Docker image
#            docker build --cache-from=europe.gcr.io/${PROJECT_NAME}/${IMAGE_NAME}:latest -t europe.gcr.io/${PROJECT_NAME}/${IMAGE_NAME}:$CIRCLE_SHA1 .
          command: |
            docker build --no-cache -t europe.gcr.io/${PROJECT_NAME}/${IMAGE_NAME}:$CIRCLE_SHA1 .
            docker tag europe.gcr.io/${PROJECT_NAME}/${IMAGE_NAME}:$CIRCLE_SHA1 europe.gcr.io/${PROJECT_NAME}/${IMAGE_NAME}:latest
      # - run:
      #     name: Save Docker image layer cache
      #     command: |
      #       mkdir -p /caches
      #       docker save -o /caches/app.tar europe.gcr.io/${PROJECT_NAME}/${IMAGE_NAME}:latest
      # - save_cache:
      #     key: v1-{{ .Branch }}-{{ epoch }}
      #     paths:
      #       - /caches/app.tar
      - deploy:
          name: Deploy application Docker image
          command: |
            pwd
            ls -al
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              echo $ACCT_AUTH | base64 -d > /app/account.json
              cat /app/account.json
              gcloud auth activate-service-account --key-file /app/account.json
              gcloud config set project $PROJECT_NAME
              gcloud --quiet config set container/cluster $CLUSTER_NAME
              gcloud config set compute/zone ${CLOUDSDK_COMPUTE_ZONE}
              gcloud --quiet container clusters get-credentials "${CLUSTER_NAME}"
              gcloud config set container/use_client_certificate True
              gcloud auth configure-docker
              docker push europe.gcr.io/${PROJECT_NAME}/${IMAGE_NAME}:${CIRCLE_SHA1}
              docker push europe.gcr.io/${PROJECT_NAME}/${IMAGE_NAME}:latest
            fi
